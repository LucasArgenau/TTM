@model TorneioTenisMesa.Models.ViewModels.ManageResultsViewModel
@{
    ViewData["Title"] = $"Gerenciar Resultados - {(Model.TournamentName ?? "Torneio")}";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2 class="mb-4">Gerenciar Resultados do Torneio: @(Model.TournamentName ?? "Nome não disponível")</h2>

<form method="get" asp-action="ManageResults" class="mb-4 p-3 border rounded bg-light">
    <input type="hidden" asp-for="TournamentId" value="@Model.TournamentId" />
    <div class="row g-3 align-items-end">
        <div class="col-md-4">
            <label asp-for="SelectedGroupId" class="form-label"></label>
            <select asp-for="SelectedGroupId" asp-items="Model.GroupFilterItems" class="form-select">
                @* The "All Groups" option is expected to have an empty value "" in GroupFilterItems *@
            </select>
        </div>
        <div class="col-md-4">
            <label asp-for="SelectedGameStatus" class="form-label"></label>
            <select asp-for="SelectedGameStatus" asp-items="Model.GameStatusFilterItems" class="form-select"></select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Aplicar Filtros</button>
        </div>
        <div class="col-md-2">
            <a asp-action="ManageResults" asp-route-tournamentId="@Model.TournamentId" class="btn btn-secondary w-100">Limpar Filtros</a>
        </div>
    </div>
</form>

@if (Model.Games.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center mx-auto" style="max-width: 900px; min-width: 700px;">
            <thead class="table-dark"> @* Changed to table-dark for better contrast *@
                <tr>
                    <th>Grupo</th>
                    <th>Jogador 1</th>
                    <th>Placar J1</th>
                    <th>Jogador 2</th>
                    <th>Placar J2</th>
                    <th>Data</th>
                    @*<th>Ações</th>*@ @* Placeholder for future edit buttons per row *@
                </tr>
            </thead>
            <tbody>
                @foreach (var game in Model.Games)
                {
                    <tr>
                        <td>@game.Group</td>
                        <td>@game.Player1Name</td>
                        <td>@game.ScorePlayer1</td>
                        <td>@game.Player2Name</td>
                        <td>@game.ScorePlayer2</td>
                        <td>@game.Date.ToString("dd/MM/yyyy")</td>
                        @*<td>
                            <button class="btn btn-sm btn-info edit-score-btn" data-game-id="@game.GameId">Editar</button>
                        </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info text-center mt-4">
        Nenhum jogo encontrado para os filtros selecionados ou para este torneio.
    </div>
}

<hr class="my-4" />
<div class="card mt-4">
    <div class="card-header">
        <h3>Registrar Novo Placar Manualmente</h3>
    </div>
    <div class="card-body">
        <form asp-action="UpdateGameScoreFromPanel" method="post" id="scoreEntryForm">
            <input type="hidden" asp-for="TournamentId" value="@Model.TournamentId" />
            @Html.AntiForgeryToken()

            <div class="row">
                @* Player 1 Section *@
                <div class="col-md-5">
                    <div class="mb-3">
                        <label asp-for="SelectedPlayer1Id" class="form-label fw-bold"></label>
                        <select asp-for="SelectedPlayer1Id" asp-items="Model.Player1FilterItems" class="form-select" id="player1Dropdown">
                            @* Player1FilterItems are populated from controller *@
                        </select>
                        <span asp-validation-for="SelectedPlayer1Id" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Player1Score" class="form-label">Placar Jogador 1</label>
                        <input asp-for="Player1Score" type="number" class="form-control" />
                        <span asp-validation-for="Player1Score" class="text-danger"></span>
                    </div>
                </div>

                @* Player 2 Section (Opponent) *@
                <div class="col-md-5">
                    <div class="mb-3">
                        <label asp-for="SelectedPlayer2Id" class="form-label fw-bold">Jogador 2 (Oponente)</label>
                        <select asp-for="SelectedPlayer2Id" class="form-select" id="player2Dropdown">
                            <option value="">-- Primeiro selecione Jogador 1 --</option>
                            @* This will be populated by JavaScript *@
                        </select>
                        <span asp-validation-for="SelectedPlayer2Id" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Player2Score" class="form-label">Placar Jogador 2</label>
                        <input asp-for="Player2Score" type="number" class="form-control" />
                        <span asp-validation-for="Player2Score" class="text-danger"></span>
                    </div>
                </div>

                @* Submit Button Section *@
                <div class="col-md-2 d-flex align-items-center justify-content-center">
                    <button type="submit" class="btn btn-success btn-lg mt-3">Adicionar Placar</button>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="mt-4">
    <a asp-action="Index" asp-controller="Admin" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left-circle"></i> Voltar para Lista de Torneios
    </a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            $('#player1Dropdown').on('change', function () {
                var player1Id = $(this).val();
                var player2Dropdown = $('#player2Dropdown');

                // Clear current options and show a loading message
                player2Dropdown.empty().append($('<option>', {
                    value: '',
                    text: '-- Carregando Oponentes... --'
                }));

                if (player1Id) {
                    // Get TournamentId from the hidden input in the scoreEntryForm
                    var tournamentId = $('#scoreEntryForm input[name="TournamentId"]').val();
                    // Get filter values
                    var groupId = $('#SelectedGroupId').val();
                    var gameStatus = $('#SelectedGameStatus').val();

                    $.ajax({
                        url: '@Url.Action("GetOpponents", "Admin")', // URL to the controller action
                        type: 'GET',
                        data: {
                            tournamentId: tournamentId,
                            player1Id: player1Id,
                            groupId: groupId,
                            gameStatus: gameStatus
                        },
                        success: function (data) {
                            player2Dropdown.empty(); // Clear loading message
                            if (data && data.length > 0) {
                                player2Dropdown.append($('<option>', {
                                    value: '', // Default empty option
                                    text: '-- Selecione o Oponente --'
                                }));
                                $.each(data, function (index, opponent) {
                                    player2Dropdown.append($('<option>', {
                                        value: opponent.id,
                                        text: opponent.name
                                    }));
                                });
                            } else {
                                player2Dropdown.append($('<option>', {
                                    value: '',
                                    text: '-- Nenhum oponente encontrado --'
                                }));
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("Error fetching opponents: " + textStatus, errorThrown);
                            player2Dropdown.empty().append($('<option>', { // Clear loading and show error
                                value: '',
                                text: '-- Erro ao carregar oponentes --'
                            }));
                        }
                    });
                } else {
                    // If Player 1 is not selected, reset Player 2 dropdown
                    player2Dropdown.empty().append($('<option>', {
                        value: '',
                        text: '-- Primeiro selecione Jogador 1 --'
                    }));
                }
            });
        });
    </script>
}
