@model TorneioTenisMesa.Models.ViewModels.NewUserCredentialsViewModel
@{
    ViewData["Title"] = "Novos Usuários Criados";
}

<h2>Novos Usuários Criados para o Torneio: @(Model.TournamentName ?? "Nome não disponível")</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<div class="alert alert-warning mt-3 mb-3" role="alert">
    <strong>Atenção:</strong> Anote estas senhas. Elas não serão exibidas novamente.
</div>

@if (Model.NewUsers != null && Model.NewUsers.Any())
{
    <table class="table table-striped table-bordered mt-3">
        <thead class="thead-dark">
            <tr>
                <th>Nome de Usuário (Login)</th>
                <th>Senha Temporária</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var userCredential in Model.NewUsers)
            {
                <tr>
                    <td>@userCredential.UserName</td>
                    <td>@userCredential.Password</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="mt-3">Nenhum novo usuário foi criado nesta importação.</p>
}

<div style="margin-top: 20px;">
    <a asp-action="ManageResults" asp-controller="Admin" asp-route-tournamentId="@Model.TournamentId" class="btn btn-primary btn-lg">
        Ir para Gerenciar Resultados do Torneio
    </a>
</div>

<div style="margin-top: 20px;">
     <a asp-action="Index" asp-controller="Admin" class="btn btn-secondary">Voltar para Lista de Torneios</a>
</div>
